#!/usr/bin/env python3

# a small python script that checks the status of the packages in various upstream EPRs
import argparse
import urllib.request
import json
from urllib.error import URLError, HTTPError


def get_version(url: str, package: str, stage: str):
    search = "{}/search?package={}".format(url, package)
    try:
        res = urllib.request.urlopen(search)
    except HTTPError as e:
        print("HTTP Error: " + e.reason)
    except URLError as e:
        print("Error reaching Kibana: " + e.reason)

    print("VERSION OF {} IN {}".format(package, stage))
    body = json.load(res)
    if len(body) == 0:
        print("\tNO PACKAGE FOUND")
        return
    print("\tVERSION: {}".format(body[0]["version"]))
    print("\tRELEASE: {}\n".format(body[0]["release"]))


def main():
    parser = argparse.ArgumentParser(description='Read Kibana overall status.')
    parser.add_argument('package', type=str,
                        help='Package to check')
    args = parser.parse_args()

    REPO_STAGING = "https://epr-staging.elastic.co"
    REPO_SNAPSHOT = "https://epr-snapshot.elastic.co"
    REPO_PROD = "https://epr.elastic.co/"

    get_version(REPO_SNAPSHOT, args.package, "snapshot")
    get_version(REPO_STAGING, args.package, "staging")
    get_version(REPO_PROD, args.package, "production")


if __name__ == "__main__":
    main()
